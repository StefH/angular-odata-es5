import { Selector } from "./Types";
export declare type ComparerResult = -1 | 0 | 1;
export declare type Comparer<T> = (left: T, right: T) => ComparerResult;
export declare type EqualityComparer<T> = (left: T, right: T) => boolean;
export declare const strictEqualityComparer: <T>() => (left: T, right: T) => boolean;
export declare function combineComparers<T>(left: Comparer<T>, right: Comparer<T>): Comparer<T>;
export declare function createComparer<TElement, TKey>(keySelector: Selector<TElement, TKey>, ascending: boolean, customComparer?: Comparer<TKey>): Comparer<TElement>;
