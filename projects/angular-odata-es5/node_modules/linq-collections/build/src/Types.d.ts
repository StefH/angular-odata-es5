export declare type Dynamic = any;
export declare type Type = "string" | "number" | "boolean" | "symbol" | "undefined" | "object" | "function";
export declare type Indexer = number | string;
export declare type Primitive = number | string | boolean;
export declare type Selector<TElement, TOut> = (element: TElement) => TOut;
export declare type ZipSelector<TElement, TOther, TOut> = (first: TElement, second: TOther) => TOut;
export declare type Predicate<TElement> = Selector<TElement, boolean>;
export declare type Aggregator<TElement, TValue> = (previous: TValue, current: TElement) => TValue;
export declare type Action<TElement> = (element: TElement, index: number) => void;
