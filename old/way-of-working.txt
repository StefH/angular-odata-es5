https://github.com/mattlewis92/generator-angular-library/issues/47

Ah I see where you're going wrong. Features, fixes should be their own independent changes. The release script is designed to release a set of commits all in own go. So your workflow should look something like
1/ Make a change in a file (let's assume it's a fix)
2/ Stage files
3/ npm run commit to use the interface to create the text
4/ Repeat steps 1-3 as many times as you want until you're ready to release
5/ Increase the version in package.json (but don't commit it)
6/ npm run release:git
7/ Optionally do npm run gh-pages
8/ npm run release:npm to publish to npm


Other info:
Once you've scaffolded out your library, everything is then controlled by npm scripts:

    npm start to serve the demo page of your library with live-reload as you develop. Unit tests are also run in the background.
    npm test will run your unit tests once and npm run test:watch will run them continuously
    npm run commit will run the git commit wizard when you're ready to commit a change
    npm run release will publish a new release. First make sure you've created the gh-pages branch and pushed it to github.
     Next change the version in package.json to the new version you would like to release, but don't commit it yet.
     Now run npm run release and the new version will be built and published to npm, as well as the demo and documentation generated and pushed to the gh-pages branch of your project.
